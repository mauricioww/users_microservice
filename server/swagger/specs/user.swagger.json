{
  "swagger": "2.0",
  "info": {
    "title": "user.proto",
    "version": "1.0"
  },
  "tags": [
    {
      "name": "UserService"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/auth": {
      "post": {
        "operationId": "UserService_Authenticate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/AuthenticateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthenticateRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/api/users": {
      "post": {
        "operationId": "UserService_CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CreateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUserRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/api/users/{id}": {
      "get": {
        "operationId": "UserService_GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "UserID which its information is interesting",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "UserService"
        ]
      },
      "delete": {
        "operationId": "UserService_DeleteUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/DeleteUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "UserID which will be deleted",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "UserService"
        ]
      },
      "put": {
        "operationId": "UserService_UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/UpdateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "User which will be updated",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "example": {
                "email": "other_user@email.com",
                "password": "new_secret_word",
                "age": 24
              },
              "properties": {
                "email": {
                  "type": "string",
                  "title": "New user email",
                  "required": [
                    "email"
                  ]
                },
                "password": {
                  "type": "string",
                  "title": "New user password",
                  "required": [
                    "password"
                  ]
                },
                "age": {
                  "type": "integer",
                  "format": "int64",
                  "title": "New user age"
                }
              },
              "required": [
                "email",
                "password"
              ]
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    }
  },
  "definitions": {
    "AuthenticateRequest": {
      "type": "object",
      "example": {
        "email": "user@email.com",
        "password": "secret_word"
      },
      "properties": {
        "email": {
          "type": "string",
          "title": "User email",
          "required": [
            "email"
          ]
        },
        "password": {
          "type": "string",
          "title": "Password email",
          "required": [
            "password"
          ]
        }
      },
      "required": [
        "email",
        "password"
      ]
    },
    "AuthenticateResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "title": "True or false according to the provided credentials"
        }
      }
    },
    "CreateUserRequest": {
      "type": "object",
      "example": {
        "email": "user@email.com",
        "password": "secret_word",
        "age": 23
      },
      "properties": {
        "email": {
          "type": "string",
          "title": "Email of the new user",
          "required": [
            "email"
          ]
        },
        "password": {
          "type": "string",
          "title": "Password of the new user",
          "required": [
            "password"
          ]
        },
        "age": {
          "type": "integer",
          "format": "int64",
          "title": "Age of the new user"
        }
      },
      "required": [
        "email",
        "password"
      ]
    },
    "CreateUserResponse": {
      "type": "object",
      "example": {
        "id": 1,
        "email": "new_user@email.com",
        "password": "secret_word",
        "age": 23
      },
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "title": "Assigned ID to new user"
        },
        "email": {
          "type": "string",
          "title": "User email"
        },
        "password": {
          "type": "string",
          "title": "User password"
        },
        "age": {
          "type": "integer",
          "format": "int64",
          "title": "User age"
        }
      }
    },
    "DeleteUserResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "title": "True if did not show up any error, otherwise false"
        }
      }
    },
    "GetUserResponse": {
      "type": "object",
      "example": {
        "id": 1,
        "email": "user@email.com",
        "password": "secret_word",
        "age": 23
      },
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "title": "UserID of the current user"
        },
        "email": {
          "type": "string",
          "title": "User email"
        },
        "password": {
          "type": "string",
          "title": "User password"
        },
        "age": {
          "type": "integer",
          "format": "int64",
          "title": "User age"
        }
      }
    },
    "UpdateUserResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "title": "True if did not show up any error, otherwise false"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  },
  "externalDocs": {
    "description": "Microservice using gRPC-Gateway",
    "url": "https://github.com/mauricioww/users_microservice/tree/v2-develop"
  }
}
