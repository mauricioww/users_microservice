// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package detailspb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// UserDetailsServiceClient is the client API for UserDetailsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type UserDetailsServiceClient interface {
	SetUserDetails(ctx context.Context, in *SetUserDetailsRequest, opts ...grpc.CallOption) (*SetUserDetailsResponse, error)
	GetUserDetails(ctx context.Context, in *GetUserDetailsRequest, opts ...grpc.CallOption) (*GetUserDetailsResponse, error)
	DeleteUserDetails(ctx context.Context, in *DeleteUserDetailsRequest, opts ...grpc.CallOption) (*DeleteUserDetailsResponse, error)
}

type userDetailsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewUserDetailsServiceClient(cc grpc.ClientConnInterface) UserDetailsServiceClient {
	return &userDetailsServiceClient{cc}
}

func (c *userDetailsServiceClient) SetUserDetails(ctx context.Context, in *SetUserDetailsRequest, opts ...grpc.CallOption) (*SetUserDetailsResponse, error) {
	out := new(SetUserDetailsResponse)
	err := c.cc.Invoke(ctx, "/UserDetailsService/SetUserDetails", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userDetailsServiceClient) GetUserDetails(ctx context.Context, in *GetUserDetailsRequest, opts ...grpc.CallOption) (*GetUserDetailsResponse, error) {
	out := new(GetUserDetailsResponse)
	err := c.cc.Invoke(ctx, "/UserDetailsService/GetUserDetails", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userDetailsServiceClient) DeleteUserDetails(ctx context.Context, in *DeleteUserDetailsRequest, opts ...grpc.CallOption) (*DeleteUserDetailsResponse, error) {
	out := new(DeleteUserDetailsResponse)
	err := c.cc.Invoke(ctx, "/UserDetailsService/DeleteUserDetails", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserDetailsServiceServer is the server API for UserDetailsService service.
// All implementations must embed UnimplementedUserDetailsServiceServer
// for forward compatibility
type UserDetailsServiceServer interface {
	SetUserDetails(context.Context, *SetUserDetailsRequest) (*SetUserDetailsResponse, error)
	GetUserDetails(context.Context, *GetUserDetailsRequest) (*GetUserDetailsResponse, error)
	DeleteUserDetails(context.Context, *DeleteUserDetailsRequest) (*DeleteUserDetailsResponse, error)
	mustEmbedUnimplementedUserDetailsServiceServer()
}

// UnimplementedUserDetailsServiceServer must be embedded to have forward compatible implementations.
type UnimplementedUserDetailsServiceServer struct {
}

func (UnimplementedUserDetailsServiceServer) SetUserDetails(context.Context, *SetUserDetailsRequest) (*SetUserDetailsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetUserDetails not implemented")
}
func (UnimplementedUserDetailsServiceServer) GetUserDetails(context.Context, *GetUserDetailsRequest) (*GetUserDetailsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserDetails not implemented")
}
func (UnimplementedUserDetailsServiceServer) DeleteUserDetails(context.Context, *DeleteUserDetailsRequest) (*DeleteUserDetailsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteUserDetails not implemented")
}
func (UnimplementedUserDetailsServiceServer) mustEmbedUnimplementedUserDetailsServiceServer() {}

// UnsafeUserDetailsServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to UserDetailsServiceServer will
// result in compilation errors.
type UnsafeUserDetailsServiceServer interface {
	mustEmbedUnimplementedUserDetailsServiceServer()
}

func RegisterUserDetailsServiceServer(s grpc.ServiceRegistrar, srv UserDetailsServiceServer) {
	s.RegisterService(&UserDetailsService_ServiceDesc, srv)
}

func _UserDetailsService_SetUserDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetUserDetailsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserDetailsServiceServer).SetUserDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/UserDetailsService/SetUserDetails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserDetailsServiceServer).SetUserDetails(ctx, req.(*SetUserDetailsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserDetailsService_GetUserDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserDetailsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserDetailsServiceServer).GetUserDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/UserDetailsService/GetUserDetails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserDetailsServiceServer).GetUserDetails(ctx, req.(*GetUserDetailsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserDetailsService_DeleteUserDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteUserDetailsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserDetailsServiceServer).DeleteUserDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/UserDetailsService/DeleteUserDetails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserDetailsServiceServer).DeleteUserDetails(ctx, req.(*DeleteUserDetailsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// UserDetailsService_ServiceDesc is the grpc.ServiceDesc for UserDetailsService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var UserDetailsService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "UserDetailsService",
	HandlerType: (*UserDetailsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetUserDetails",
			Handler:    _UserDetailsService_SetUserDetails_Handler,
		},
		{
			MethodName: "GetUserDetails",
			Handler:    _UserDetailsService_GetUserDetails_Handler,
		},
		{
			MethodName: "DeleteUserDetails",
			Handler:    _UserDetailsService_DeleteUserDetails_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "details.proto",
}
